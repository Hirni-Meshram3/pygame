name: ManyLinux

# Run CI only when a release is created, on changes to main branch, or any PR 
# to main. Do not run CI on any other branch. Also, skip any non-source changes 
# from running on CI
on:
  release:
    types: [created]
  push:
    branches: main
    paths-ignore:
    - 'docs/**'
    - 'examples/**'
    - '.gitignore'
    - 'README.rst'
    - '.github/workflows/macos.yml'
    - '.github/workflows/windows.yml'
    - '.github/workflows/sdl1-sdist.yml'
  pull_request:
    branches: main
    paths-ignore:
    - 'docs/**'
    - 'examples/**'
    - '.gitignore'
    - 'README.rst'
    - '.github/workflows/macos.yml'
    - '.github/workflows/windows.yml'
    - '.github/workflows/sdl1-sdist.yml'

# TODO: Parallelize this build
jobs:
  build-manylinux:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Build manylinux wheels
      run: |
        cd buildconfig/manylinux-build
        make pull pull-manylinux wheels wheels-manylinux
        cd ../..
        mkdir -p dist/
        cp buildconfig/manylinux-build/wheelhouse/*.whl dist/

    # We upload the generated files under github actions assets
    - name: Upload dist
      uses: actions/upload-artifact@v2
      with:
        path: dist/*.whl

  test-aarch64:
    name: "Test ${{ matrix.pyver }} aarch64"
    strategy:
      matrix:
        pyver: [cp36-cp36m, cp37-cp37m, cp38-cp38, cp39-cp39]
        arch: [aarch64]
      fail-fast: false
    runs-on: ubuntu-latest
    env:
      py: /opt/python/${{ matrix.pyver }}/bin/python
      img: quay.io/pypa/manylinux2014_${{ matrix.arch }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Install dependencies
      run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
            ${{ env.img }} \
            bash -exc '${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
            source .env/bin/activate && \
            yum install -y sudo && \
            export PYTHON_EXE=python3 && \
            pwd && \
            sudo yum install -y epel-release && \
            sudo yum-config-manager --enable epel && \
            sudo yum install -y SDL2-devel freetype-devel openjpeg-devel SDL2_mixer-devel portmidi-devel fontpackages-devel SDL2_image-devel && \
            source buildconfig/manylinux-build/build-wheels.sh
            #source /ws/buildconfig/ci/travis/build_test_sdist.sh && \
            python -m pip install twine && \
            python -m twine upload dist/*.tar.gz && \
            deactivate'
